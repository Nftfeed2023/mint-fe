/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TokenFactoryV1,
  TokenFactoryV1Interface,
} from "../TokenFactoryV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_royaltyAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_creationFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
    ],
    name: "DeployToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "admins",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_creationFee",
        type: "uint256",
      },
    ],
    name: "changeCreationFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_royaltyAddress",
        type: "address",
      },
    ],
    name: "changeRoyaltyAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "creationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_totalSupply",
        type: "uint256",
      },
    ],
    name: "deploy",
    outputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isAdd",
        type: "bool",
      },
    ],
    name: "updateAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161196238038061196283398101604081905261002f91610143565b610038336100f3565b600180556001600160a01b0382166100965760405162461bcd60e51b815260206004820152601f60248201527f526f79616c74792041646472657373206973205a65726f206164647265737300604482015260640160405180910390fd5b600280546001600160a01b0319166001600160a01b03841617905560038190556001600560006100c33390565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790555061017d9050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806040838503121561015657600080fd5b82516001600160a01b038116811461016d57600080fd5b6020939093015192949293505050565b6117d68061018c6000396000f3fe608060405260043610620000ba5760003560e01c80638da5cb5b116200007d578063d4bc675f1162000054578063d4bc675f1462000205578063dce0b4e4146200022a578063f2fde38b146200024257600080fd5b80638da5cb5b146200019e578063a1596c4c14620001be578063ad2f852a14620001e357600080fd5b8063429b62e514620000bf5780634ef980971462000108578063626be5671462000138578063670a6fd9146200015f578063715018a61462000186575b600080fd5b348015620000cc57600080fd5b50620000f3620000de36600462000739565b60056020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6200011f6200011936600462000802565b62000267565b6040516001600160a01b039091168152602001620000ff565b3480156200014557600080fd5b506200015060045481565b604051908152602001620000ff565b3480156200016c57600080fd5b50620001846200017e36600462000876565b6200035c565b005b3480156200019357600080fd5b50620001846200044f565b348015620001ab57600080fd5b506000546001600160a01b03166200011f565b348015620001cb57600080fd5b5062000184620001dd366004620008b6565b62000467565b348015620001f057600080fd5b506002546200011f906001600160a01b031681565b3480156200021257600080fd5b50620001846200022436600462000739565b620004e4565b3480156200023757600080fd5b506200015060035481565b3480156200024f57600080fd5b50620001846200026136600462000739565b6200057e565b600062000273620005fa565b600480549060006200028583620008d0565b91905055506000848484336040516200029e906200070e565b620002ad949392919062000940565b604051809103906000f080158015620002ca573d6000803e3d6000fd5b506002546003546040519293506001600160a01b039091169181156108fc0291906000818181858888f193505050501580156200030b573d6000803e3d6000fd5b507fcb6c3477160064f99e637aae02c50290d3cbc5f72997a062912120ae358248d485858560405162000341939291906200098a565b60405180910390a190506200035560018055565b9392505050565b3360009081526005602052604090205460ff16620003c15760405162461bcd60e51b815260206004820152601e60248201527f41646d696e3a2063616c6c6572206973206e6f74207468652061646d696e000060448201526064015b60405180910390fd5b620003cb620005fa565b6001600160a01b038216620004235760405162461bcd60e51b815260206004820152601660248201527f41646d696e2061646472657373206973205a65726f20000000000000000000006044820152606401620003b8565b6001600160a01b0382166000908152600560205260409020805460ff1916821515179055600180555050565b6200045962000655565b620004656000620006b1565b565b3360009081526005602052604090205460ff16620004c85760405162461bcd60e51b815260206004820152601e60248201527f41646d696e3a2063616c6c6572206973206e6f74207468652061646d696e00006044820152606401620003b8565b620004d2620005fa565b6003819055620004e160018055565b50565b3360009081526005602052604090205460ff16620005455760405162461bcd60e51b815260206004820152601e60248201527f41646d696e3a2063616c6c6572206973206e6f74207468652061646d696e00006044820152606401620003b8565b6200054f620005fa565b6002805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383161790556001805550565b6200058862000655565b6001600160a01b038116620005ef5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620003b8565b620004e181620006b1565b6002600154036200064e5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401620003b8565b6002600155565b6000546001600160a01b03163314620004655760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620003b8565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610e0580620009c583390190565b80356001600160a01b03811681146200073457600080fd5b919050565b6000602082840312156200074c57600080fd5b62000355826200071c565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200077f57600080fd5b813567ffffffffffffffff808211156200079d576200079d62000757565b604051601f8301601f19908116603f01168101908282118183101715620007c857620007c862000757565b81604052838152866020858801011115620007e257600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156200081857600080fd5b833567ffffffffffffffff808211156200083157600080fd5b6200083f878388016200076d565b945060208601359150808211156200085657600080fd5b5062000865868287016200076d565b925050604084013590509250925092565b600080604083850312156200088a57600080fd5b62000895836200071c565b915060208301358015158114620008ab57600080fd5b809150509250929050565b600060208284031215620008c957600080fd5b5035919050565b600060018201620008f157634e487b7160e01b600052601160045260246000fd5b5060010190565b6000815180845260005b81811015620009205760208185018101518683018201520162000902565b506000602082860101526020601f19601f83011685010191505092915050565b608081526000620009556080830187620008f8565b8281036020840152620009698187620008f8565b9150508360408301526001600160a01b038316606083015295945050505050565b6060815260006200099f6060830186620008f8565b8281036020840152620009b38186620008f8565b91505082604083015294935050505056fe60806040523480156200001157600080fd5b5060405162000e0538038062000e05833981016040819052620000349162000229565b838360036200004483826200034c565b5060046200005382826200034c565b5050506200008a816200006b6200009460201b60201c565b6200007890600a6200052d565b62000084908562000545565b62000099565b5050505062000575565b601290565b6001600160a01b038216620000f45760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200010891906200055f565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200018c57600080fd5b81516001600160401b0380821115620001a957620001a962000164565b604051601f8301601f19908116603f01168101908282118183101715620001d457620001d462000164565b81604052838152602092508683858801011115620001f157600080fd5b600091505b83821015620002155785820183015181830184015290820190620001f6565b600093810190920192909252949350505050565b600080600080608085870312156200024057600080fd5b84516001600160401b03808211156200025857600080fd5b62000266888389016200017a565b955060208701519150808211156200027d57600080fd5b506200028c878288016200017a565b60408701516060880151919550935090506001600160a01b0381168114620002b357600080fd5b939692955090935050565b600181811c90821680620002d357607f821691505b602082108103620002f457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200015f57600081815260208120601f850160051c81016020861015620003235750805b601f850160051c820191505b8181101562000344578281556001016200032f565b505050505050565b81516001600160401b0381111562000368576200036862000164565b6200038081620003798454620002be565b84620002fa565b602080601f831160018114620003b857600084156200039f5750858301515b600019600386901b1c1916600185901b17855562000344565b600085815260208120601f198616915b82811015620003e957888601518255948401946001909101908401620003c8565b5085821015620004085787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200046f57816000190482111562000453576200045362000418565b808516156200046157918102915b93841c939080029062000433565b509250929050565b600082620004885750600162000527565b81620004975750600062000527565b8160018114620004b05760028114620004bb57620004db565b600191505062000527565b60ff841115620004cf57620004cf62000418565b50506001821b62000527565b5060208310610133831016604e8410600b841016171562000500575081810a62000527565b6200050c83836200042e565b806000190482111562000523576200052362000418565b0290505b92915050565b60006200053e60ff84168362000477565b9392505050565b808202811582820484141762000527576200052762000418565b8082018082111562000527576200052762000418565b61088080620005856000396000f3fe608060405234801561001057600080fd5b50600436106100b95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610177578063a9059cbb1461018a578063dd62ed3e1461019d57600080fd5b8063395093511461013357806370a082311461014657806395d89b411461016f57600080fd5b806306fdde03146100be578063095ea7b3146100dc57806318160ddd146100ff57806323b872dd14610111578063313ce56714610124575b600080fd5b6100c66101d6565b6040516100d391906106f3565b60405180910390f35b6100ef6100ea36600461075d565b610268565b60405190151581526020016100d3565b6002545b6040519081526020016100d3565b6100ef61011f366004610787565b610282565b604051601281526020016100d3565b6100ef61014136600461075d565b6102a6565b6101036101543660046107c3565b6001600160a01b031660009081526020819052604090205490565b6100c66102e5565b6100ef61018536600461075d565b6102f4565b6100ef61019836600461075d565b61038b565b6101036101ab3660046107e5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101e590610818565b80601f016020809104026020016040519081016040528092919081815260200182805461021190610818565b801561025e5780601f106102335761010080835404028352916020019161025e565b820191906000526020600020905b81548152906001019060200180831161024157829003601f168201915b5050505050905090565b600033610276818585610399565b60019150505b92915050565b6000336102908582856104bd565b61029b85858561054f565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061027690829086906102e0908790610852565b610399565b6060600480546101e590610818565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091908381101561037e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61029b8286868403610399565b60003361027681858561054f565b6001600160a01b0383166103fb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610375565b6001600160a01b03821661045c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610375565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114610549578181101561053c5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610375565b6105498484848403610399565b50505050565b6001600160a01b0383166105b35760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610375565b6001600160a01b0382166106155760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610375565b6001600160a01b0383166000908152602081905260409020548181101561068d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610375565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610549565b600060208083528351808285015260005b8181101561072057858101830151858201604001528201610704565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461075857600080fd5b919050565b6000806040838503121561077057600080fd5b61077983610741565b946020939093013593505050565b60008060006060848603121561079c57600080fd5b6107a584610741565b92506107b360208501610741565b9150604084013590509250925092565b6000602082840312156107d557600080fd5b6107de82610741565b9392505050565b600080604083850312156107f857600080fd5b61080183610741565b915061080f60208401610741565b90509250929050565b600181811c9082168061082c57607f821691505b60208210810361084c57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561027c57634e487b7160e01b600052601160045260246000fdfea164736f6c6343000813000aa164736f6c6343000813000a";

export class TokenFactoryV1__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _royaltyAddress: string,
    _creationFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenFactoryV1> {
    return super.deploy(
      _royaltyAddress,
      _creationFee,
      overrides || {}
    ) as Promise<TokenFactoryV1>;
  }
  getDeployTransaction(
    _royaltyAddress: string,
    _creationFee: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _royaltyAddress,
      _creationFee,
      overrides || {}
    );
  }
  attach(address: string): TokenFactoryV1 {
    return super.attach(address) as TokenFactoryV1;
  }
  connect(signer: Signer): TokenFactoryV1__factory {
    return super.connect(signer) as TokenFactoryV1__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenFactoryV1Interface {
    return new utils.Interface(_abi) as TokenFactoryV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenFactoryV1 {
    return new Contract(address, _abi, signerOrProvider) as TokenFactoryV1;
  }
}
