/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenTool, TokenToolInterface } from "../TokenTool";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc20",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_tos",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "batchTranferErc20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tos",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "batchTranferNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_erc721",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "transferFullErc721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a33610023565b60018055610073565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610cdd806100826000396000f3fe60806040526004361061007f5760003560e01c8063715018a61161004e578063715018a6146101495780638da5cb5b1461015e578063dd9ee30f14610186578063f2fde38b146101a657600080fd5b806306fdde031461008b578063150b7a02146100b657806344f7d284146101075780636c370d661461012957600080fd5b3661008657005b600080fd5b34801561009757600080fd5b506100a06101c6565b6040516100ad9190610933565b60405180910390f35b3480156100c257600080fd5b506100d66100d1366004610998565b610254565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016100ad565b34801561011357600080fd5b50610127610122366004610ac0565b610265565b005b34801561013557600080fd5b50610127610144366004610b41565b6102ea565b34801561015557600080fd5b5061012761045a565b34801561016a57600080fd5b506000546040516001600160a01b0390911681526020016100ad565b34801561019257600080fd5b506101276101a1366004610b74565b61046e565b3480156101b257600080fd5b506101276101c1366004610be0565b610515565b600280546101d390610c02565b80601f01602080910402602001604051908101604052809291908181526020018280546101ff90610c02565b801561024c5780601f106102215761010080835404028352916020019161024c565b820191906000526020600020905b81548152906001019060200180831161022f57829003601f168201915b505050505081565b630a85bd0160e11b5b949350505050565b8460005b848110156102e1576102cf3387878481811061028757610287610c3c565b905060200201602081019061029c9190610be0565b8686858181106102ae576102ae610c3c565b90506020020135856001600160a01b0316610593909392919063ffffffff16565b806102d981610c52565b915050610269565b50505050505050565b6040516370a0823160e01b81523360048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610331573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103559190610c79565b905060005b8181101561045457604051632f745c5960e01b8152336004820152600060248201819052906001600160a01b03861690632f745c5990604401602060405180830381865afa1580156103b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d49190610c79565b604051632142170760e11b81523360048201526001600160a01b03868116602483015260448201839052919250908616906342842e0e90606401600060405180830381600087803b15801561042857600080fd5b505af115801561043c573d6000803e3d6000fd5b5050505050808061044c90610c52565b91505061035a565b50505050565b610462610602565b61046c600061065c565b565b6104766106b9565b60005b8381101561050b5784848281811061049357610493610c3c565b90506020020160208101906104a89190610be0565b6001600160a01b03166108fc8484848181106104c6576104c6610c3c565b905060200201359081150290604051600060405180830381858888f193505050501580156104f8573d6000803e3d6000fd5b508061050381610c52565b915050610479565b5061045460018055565b61051d610602565b6001600160a01b0381166105875760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b6105908161065c565b50565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b179052610454908590610712565b6000546001600160a01b0316331461046c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161057e565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60026001540361070b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161057e565b6002600155565b6000610767826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107ec9092919063ffffffff16565b90508051600014806107885750808060200190518101906107889190610c92565b6107e75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161057e565b505050565b606061025d848460008585600080866001600160a01b031685876040516108139190610cb4565b60006040518083038185875af1925050503d8060008114610850576040519150601f19603f3d011682016040523d82523d6000602084013e610855565b606091505b509150915061086687838387610871565b979650505050505050565b606083156108e05782516000036108d9576001600160a01b0385163b6108d95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161057e565b508161025d565b61025d83838151156108f55781518083602001fd5b8060405162461bcd60e51b815260040161057e9190610933565b60005b8381101561092a578181015183820152602001610912565b50506000910152565b602081526000825180602084015261095281604085016020870161090f565b601f01601f19169190910160400192915050565b80356001600160a01b038116811461097d57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156109ae57600080fd5b6109b785610966565b93506109c560208601610966565b925060408501359150606085013567ffffffffffffffff808211156109e957600080fd5b818701915087601f8301126109fd57600080fd5b813581811115610a0f57610a0f610982565b604051601f8201601f19908116603f01168101908382118183101715610a3757610a37610982565b816040528281528a6020848701011115610a5057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008083601f840112610a8657600080fd5b50813567ffffffffffffffff811115610a9e57600080fd5b6020830191508360208260051b8501011115610ab957600080fd5b9250929050565b600080600080600060608688031215610ad857600080fd5b610ae186610966565b9450602086013567ffffffffffffffff80821115610afe57600080fd5b610b0a89838a01610a74565b90965094506040880135915080821115610b2357600080fd5b50610b3088828901610a74565b969995985093965092949392505050565b60008060408385031215610b5457600080fd5b610b5d83610966565b9150610b6b60208401610966565b90509250929050565b60008060008060408587031215610b8a57600080fd5b843567ffffffffffffffff80821115610ba257600080fd5b610bae88838901610a74565b90965094506020870135915080821115610bc757600080fd5b50610bd487828801610a74565b95989497509550505050565b600060208284031215610bf257600080fd5b610bfb82610966565b9392505050565b600181811c90821680610c1657607f821691505b602082108103610c3657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b600060018201610c7257634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215610c8b57600080fd5b5051919050565b600060208284031215610ca457600080fd5b81518015158114610bfb57600080fd5b60008251610cc681846020870161090f565b919091019291505056fea164736f6c6343000813000a";

export class TokenTool__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenTool> {
    return super.deploy(overrides || {}) as Promise<TokenTool>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TokenTool {
    return super.attach(address) as TokenTool;
  }
  connect(signer: Signer): TokenTool__factory {
    return super.connect(signer) as TokenTool__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenToolInterface {
    return new utils.Interface(_abi) as TokenToolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenTool {
    return new Contract(address, _abi, signerOrProvider) as TokenTool;
  }
}
