/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { UsdToken, UsdTokenInterface } from "../UsdToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600b81526020016a1554d10815195cdd1b995d60aa1b81525060405180604001604052806004815260200163151554d160e21b81525081600390816200006491906200023a565b5060046200007382826200023a565b505050620000ae336200008b620000c660201b60201c565b6200009890600a6200041b565b620000a890633b9aca0062000433565b620000cb565b600580546001600160a01b0319163317905562000463565b601290565b6001600160a01b038216620001265760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200013a91906200044d565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620001c157607f821691505b602082108103620001e257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200019157600081815260208120601f850160051c81016020861015620002115750805b601f850160051c820191505b8181101562000232578281556001016200021d565b505050505050565b81516001600160401b0381111562000256576200025662000196565b6200026e81620002678454620001ac565b84620001e8565b602080601f831160018114620002a657600084156200028d5750858301515b600019600386901b1c1916600185901b17855562000232565b600085815260208120601f198616915b82811015620002d757888601518255948401946001909101908401620002b6565b5085821015620002f65787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200035d57816000190482111562000341576200034162000306565b808516156200034f57918102915b93841c939080029062000321565b509250929050565b600082620003765750600162000415565b81620003855750600062000415565b81600181146200039e5760028114620003a957620003c9565b600191505062000415565b60ff841115620003bd57620003bd62000306565b50506001821b62000415565b5060208310610133831016604e8410600b8410161715620003ee575081810a62000415565b620003fa83836200031c565b806000190482111562000411576200041162000306565b0290505b92915050565b60006200042c60ff84168362000365565b9392505050565b808202811582820484141762000415576200041562000306565b8082018082111562000415576200041562000306565b610a2280620004736000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063395093511161008c57806395d89b411161006657806395d89b41146101d5578063a457c2d7146101dd578063a9059cbb146101f0578063dd62ed3e1461020357600080fd5b8063395093511461018457806340c10f191461019757806370a08231146101ac57600080fd5b806318160ddd116100bd57806318160ddd1461015057806323b872dd14610162578063313ce5671461017557600080fd5b806306fdde03146100e45780630754617214610102578063095ea7b31461012d575b600080fd5b6100ec61023c565b6040516100f99190610895565b60405180910390f35b600554610115906001600160a01b031681565b6040516001600160a01b0390911681526020016100f9565b61014061013b3660046108ff565b6102ce565b60405190151581526020016100f9565b6002545b6040519081526020016100f9565b610140610170366004610929565b6102e8565b604051601281526020016100f9565b6101406101923660046108ff565b61030c565b6101aa6101a53660046108ff565b61034b565b005b6101546101ba366004610965565b6001600160a01b031660009081526020819052604090205490565b6100ec6103cd565b6101406101eb3660046108ff565b6103dc565b6101406101fe3660046108ff565b61046e565b610154610211366004610987565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60606003805461024b906109ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610277906109ba565b80156102c45780601f10610299576101008083540402835291602001916102c4565b820191906000526020600020905b8154815290600101906020018083116102a757829003601f168201915b5050505050905090565b6000336102dc81858561047c565b60019150505b92915050565b6000336102f68582856105a0565b610301858585610632565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091906102dc90829086906103469087906109f4565b61047c565b331580159061036457506005546001600160a01b031633145b6103bf5760405162461bcd60e51b815260206004820152602160248201527f557364546f6b656e3a206163636f756e74206e6f7420726f6c65206d696e74656044820152603960f91b60648201526084015b60405180910390fd5b6103c982826107d6565b5050565b60606004805461024b906109ba565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156104615760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103b6565b610301828686840361047c565b6000336102dc818585610632565b6001600160a01b0383166104de5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103b6565b6001600160a01b03821661053f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103b6565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461062c578181101561061f5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103b6565b61062c848484840361047c565b50505050565b6001600160a01b0383166106965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103b6565b6001600160a01b0382166106f85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103b6565b6001600160a01b038316600090815260208190526040902054818110156107705760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103b6565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361062c565b6001600160a01b03821661082c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103b6565b806002600082825461083e91906109f4565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b818110156108c2578581018301518582016040015282016108a6565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146108fa57600080fd5b919050565b6000806040838503121561091257600080fd5b61091b836108e3565b946020939093013593505050565b60008060006060848603121561093e57600080fd5b610947846108e3565b9250610955602085016108e3565b9150604084013590509250925092565b60006020828403121561097757600080fd5b610980826108e3565b9392505050565b6000806040838503121561099a57600080fd5b6109a3836108e3565b91506109b1602084016108e3565b90509250929050565b600181811c908216806109ce57607f821691505b6020821081036109ee57634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156102e257634e487b7160e01b600052601160045260246000fdfea164736f6c6343000813000a";

export class UsdToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UsdToken> {
    return super.deploy(overrides || {}) as Promise<UsdToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): UsdToken {
    return super.attach(address) as UsdToken;
  }
  connect(signer: Signer): UsdToken__factory {
    return super.connect(signer) as UsdToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UsdTokenInterface {
    return new utils.Interface(_abi) as UsdTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UsdToken {
    return new Contract(address, _abi, signerOrProvider) as UsdToken;
  }
}
