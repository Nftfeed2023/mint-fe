/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessControl__factory>;
    getContractFactory(
      name: "IAccessControl",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAccessControl__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "ERC1155Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Burnable__factory>;
    getContractFactory(
      name: "ERC1155Supply",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Supply__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC721Holder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Holder__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "TokenERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenERC1155__factory>;
    getContractFactory(
      name: "TokenERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenERC20__factory>;
    getContractFactory(
      name: "TokenERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenERC721__factory>;
    getContractFactory(
      name: "DooDooToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DooDooToken__factory>;
    getContractFactory(
      name: "ERC721Template",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Template__factory>;
    getContractFactory(
      name: "FeedToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeedToken__factory>;
    getContractFactory(
      name: "FeedVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeedVault__factory>;
    getContractFactory(
      name: "FeedVaultV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeedVaultV1__factory>;
    getContractFactory(
      name: "FeedVaultV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeedVaultV2__factory>;
    getContractFactory(
      name: "FreeMintPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FreeMintPool__factory>;
    getContractFactory(
      name: "IPancakeFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeFactory__factory>;
    getContractFactory(
      name: "IPancakePair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakePair__factory>;
    getContractFactory(
      name: "IPancakeRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeRouter__factory>;
    getContractFactory(
      name: "IPancakeRouter01",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeRouter01__factory>;
    getContractFactory(
      name: "IPancakeRouter02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPancakeRouter02__factory>;
    getContractFactory(
      name: "SafeArray",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeArray__factory>;
    getContractFactory(
      name: "String",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.String__factory>;
    getContractFactory(
      name: "MintNftFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintNftFactory__factory>;
    getContractFactory(
      name: "MintNftFactoryV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MintNftFactoryV2__factory>;
    getContractFactory(
      name: "QuestPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.QuestPool__factory>;
    getContractFactory(
      name: "StakeERC721Fixed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StakeERC721Fixed__factory>;
    getContractFactory(
      name: "StakeMultipleERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StakeMultipleERC721__factory>;
    getContractFactory(
      name: "StakeNftAutoApy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StakeNftAutoApy__factory>;
    getContractFactory(
      name: "StakeNftFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StakeNftFactory__factory>;
    getContractFactory(
      name: "TokenTool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenTool__factory>;
    getContractFactory(
      name: "UsdToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UsdToken__factory>;
    getContractFactory(
      name: "WrappedSharkie",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WrappedSharkie__factory>;

    getContractAt(
      name: "AccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessControl>;
    getContractAt(
      name: "IAccessControl",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAccessControl>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "ERC1155Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Burnable>;
    getContractAt(
      name: "ERC1155Supply",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Supply>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Enumerable>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC721Holder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Holder>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "TokenERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenERC1155>;
    getContractAt(
      name: "TokenERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenERC20>;
    getContractAt(
      name: "TokenERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenERC721>;
    getContractAt(
      name: "DooDooToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DooDooToken>;
    getContractAt(
      name: "ERC721Template",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Template>;
    getContractAt(
      name: "FeedToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FeedToken>;
    getContractAt(
      name: "FeedVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FeedVault>;
    getContractAt(
      name: "FeedVaultV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FeedVaultV1>;
    getContractAt(
      name: "FeedVaultV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FeedVaultV2>;
    getContractAt(
      name: "FreeMintPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FreeMintPool>;
    getContractAt(
      name: "IPancakeFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPancakeFactory>;
    getContractAt(
      name: "IPancakePair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPancakePair>;
    getContractAt(
      name: "IPancakeRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPancakeRouter>;
    getContractAt(
      name: "IPancakeRouter01",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPancakeRouter01>;
    getContractAt(
      name: "IPancakeRouter02",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPancakeRouter02>;
    getContractAt(
      name: "SafeArray",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeArray>;
    getContractAt(
      name: "String",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.String>;
    getContractAt(
      name: "MintNftFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintNftFactory>;
    getContractAt(
      name: "MintNftFactoryV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MintNftFactoryV2>;
    getContractAt(
      name: "QuestPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.QuestPool>;
    getContractAt(
      name: "StakeERC721Fixed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StakeERC721Fixed>;
    getContractAt(
      name: "StakeMultipleERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StakeMultipleERC721>;
    getContractAt(
      name: "StakeNftAutoApy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StakeNftAutoApy>;
    getContractAt(
      name: "StakeNftFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StakeNftFactory>;
    getContractAt(
      name: "TokenTool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenTool>;
    getContractAt(
      name: "UsdToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UsdToken>;
    getContractAt(
      name: "WrappedSharkie",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WrappedSharkie>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
